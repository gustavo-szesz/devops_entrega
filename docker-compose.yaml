version: '3.8'

services:
  # Auth API Services
  auth-app:
    build: ./auth-api
    ports:
      - "8080:80"
    depends_on:
      - auth-db
      - auth-redis
    volumes:
      - ./auth-api/api:/var/www/html
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  auth-db:
    image: postgres:15
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: authuser
      POSTGRES_PASSWORD: authpass
    ports:
      - "5432:5432"
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
      - ./auth-api/base_query.sql:/docker-entrypoint-initdb.d/base_query.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authuser -d authdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - auth_redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Messageria Services
  messageria-app:
    build: ./messageria_express
    ports:
      - "3001:3000"
    depends_on:
      - messageria-redis
      - auth-app
      - rabbitmq
    environment:
      - REDIS_HOST=messageria-redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  messageria-redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    volumes:
      - messageria_redis_data:/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"   # Porta AMQP
      - "15672:15672" # Porta de gerenciamento
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  message-worker:
    build: ./messageria_express
    command: node workers/messageWorker.js
    depends_on:
      - messageria-redis
      - rabbitmq
    environment:
      - REDIS_HOST=messageria-redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    networks:
      - app-network

# Record API Services
  record-api:
    build: ./record-api
    ports:
      - "8000:8000"
    depends_on:
      auth-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://authuser:authpass@auth-db:5432/authdb
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  app-network:
    driver: bridge

volumes:
  auth_pgdata:
  auth_redis_data:
  messageria_redis_data:
  rabbitmq_data: 
  record_pgdata:
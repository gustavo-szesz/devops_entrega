{
	"info": {
		"_postman_id": "microservices-collection",
		"name": "Microservices Tests",
		"description": "Coleção de testes para os microsserviços de Auth e Messageria",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth API",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/health",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["health"]
						}
					},
					"response": []
				},
				{
					"name": "Criar Usuário",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/users/create",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["users", "create"]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Teste Usuario\",\n    \"lastName\": \"Teste Sobrenome\",\n    \"email\": \"teste@email.com\",\n    \"password\": \"senha123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('lastName');",
									"    pm.expect(jsonData).to.have.property('email');",
									"});",
									"",
									"if (pm.response.json().id) {",
									"    pm.environment.set(\"user_id\", pm.response.json().id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/users/login",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8080",
							"path": ["users", "login"]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"teste@email.com\",\n    \"password\": \"senha123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"});",
									"",
									"if (pm.response.json().token) {",
									"    pm.environment.set(\"auth_token\", pm.response.json().token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "Messageria API",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:3001/api/health",
							"protocol": "http",
							"host": ["localhost"],
							"port": "3001",
							"path": ["api", "health"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message', 'Service is running');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Enviar Mensagem",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:3001/api/message",
							"protocol": "http",
							"host": ["localhost"],
							"port": "3001",
							"path": ["api", "message"]
						},
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"Teste de mensagem\",\n    \"userIdSend\": \"{{user_id}}\",\n    \"userIdReceive\": \"2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success', true);",
									"    pm.expect(jsonData).to.have.property('data', 'Message sent successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Receber Mensagens",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:3001/api/message/worker",
							"protocol": "http",
							"host": ["localhost"],
							"port": "3001",
							"path": ["api", "message", "worker"]
						},
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userIdSend\": \"{{user_id}}\",\n    \"userIdReceive\": \"2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success', true);",
									"    pm.expect(jsonData).to.have.property('data', 'Message received successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		}
	]
} 